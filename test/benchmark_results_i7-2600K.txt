** Original JDK8 code with repeating annotations

Executing: /home/peter/Apps64/jdk1.8.0-jdk8-tl/bin/java -Xmx4G -cp ../out/production/test test.ReflectionTest

measure:

       TestAnnotationRootCache:   1 threads *     10000 loops each: tAvg =       1,856.758 ms (x   1.00), σ =      0.000 ms
       TestAnnotationRootCache:   2 threads *     10000 loops each: tAvg =       2,028.232 ms (x   1.09), σ =      1.764 ms
       TestAnnotationRootCache:   4 threads *     10000 loops each: tAvg =       2,129.530 ms (x   1.15), σ =     17.459 ms
       TestAnnotationRootCache:   8 threads *     10000 loops each: tAvg =       3,558.791 ms (x   1.92), σ =     10.418 ms
       TestAnnotationRootCache:  16 threads *     10000 loops each: tAvg =       7,103.148 ms (x   3.83), σ =     78.460 ms
       TestAnnotationRootCache:  32 threads *     10000 loops each: tAvg =      14,113.786 ms (x   7.60), σ =    243.684 ms

        TestAnnotationExistent:   1 threads *   1000000 loops each: tAvg =       1,705.840 ms (x   1.00), σ =      0.000 ms
        TestAnnotationExistent:   2 threads *   1000000 loops each: tAvg =       1,385.250 ms (x   0.81), σ =      0.283 ms
        TestAnnotationExistent:   4 threads *   1000000 loops each: tAvg =       1,394.163 ms (x   0.82), σ =      0.545 ms
        TestAnnotationExistent:   8 threads *   1000000 loops each: tAvg =       8,884.799 ms (x   5.21), σ =     24.419 ms
        TestAnnotationExistent:  16 threads *   1000000 loops each: tAvg =      18,226.023 ms (x  10.68), σ =    216.830 ms
        TestAnnotationExistent:  32 threads *   1000000 loops each: tAvg =      36,761.146 ms (x  21.55), σ =    383.195 ms

     TestAnnotationNonexistent:   1 threads *   1000000 loops each: tAvg =         856.926 ms (x   1.00), σ =      0.000 ms
     TestAnnotationNonexistent:   2 threads *   1000000 loops each: tAvg =       2,432.213 ms (x   2.84), σ =      2.658 ms
     TestAnnotationNonexistent:   4 threads *   1000000 loops each: tAvg =       6,379.997 ms (x   7.45), σ =    145.972 ms
     TestAnnotationNonexistent:   8 threads *   1000000 loops each: tAvg =      34,483.155 ms (x  40.24), σ =     92.609 ms
     TestAnnotationNonexistent:  16 threads *   1000000 loops each: tAvg =      65,359.403 ms (x  76.27), σ =    344.631 ms
     TestAnnotationNonexistent:  32 threads *   1000000 loops each: tAvg =     130,250.935 ms (x 152.00), σ =  1,027.758 ms


** Original JDK8 code with repeating annotations
** + patched: java.lang.Class, java.lang.reflect.[Field,Method,Constructor,Executable]

Executing: /home/peter/Apps64/jdk1.8.0-jdk8-tl/bin/java -Xmx4G -cp ../out/production/test -Xbootclasspath/p:../out/production/jdk test.ReflectionTest

measure:

       TestAnnotationRootCache:   1 threads *     10000 loops each: tAvg =          72.595 ms (x   1.00), σ =      0.000 ms
       TestAnnotationRootCache:   2 threads *     10000 loops each: tAvg =          66.892 ms (x   0.92), σ =      0.494 ms
       TestAnnotationRootCache:   4 threads *     10000 loops each: tAvg =          69.030 ms (x   0.95), σ =      5.276 ms
       TestAnnotationRootCache:   8 threads *     10000 loops each: tAvg =         101.901 ms (x   1.40), σ =     14.859 ms
       TestAnnotationRootCache:  16 threads *     10000 loops each: tAvg =         131.154 ms (x   1.81), σ =     13.562 ms
       TestAnnotationRootCache:  32 threads *     10000 loops each: tAvg =         159.085 ms (x   2.19), σ =     38.321 ms

        TestAnnotationExistent:   1 threads *   1000000 loops each: tAvg =       1,034.848 ms (x   1.00), σ =      0.000 ms
        TestAnnotationExistent:   2 threads *   1000000 loops each: tAvg =       1,028.880 ms (x   0.99), σ =      0.600 ms
        TestAnnotationExistent:   4 threads *   1000000 loops each: tAvg =       1,027.732 ms (x   0.99), σ =      2.615 ms
        TestAnnotationExistent:   8 threads *   1000000 loops each: tAvg =       1,883.452 ms (x   1.82), σ =      2.752 ms
        TestAnnotationExistent:  16 threads *   1000000 loops each: tAvg =       3,721.639 ms (x   3.60), σ =     52.950 ms
        TestAnnotationExistent:  32 threads *   1000000 loops each: tAvg =       7,393.989 ms (x   7.15), σ =     46.214 ms

     TestAnnotationNonexistent:   1 threads *   1000000 loops each: tAvg =         314.207 ms (x   1.00), σ =      0.000 ms
     TestAnnotationNonexistent:   2 threads *   1000000 loops each: tAvg =         308.984 ms (x   0.98), σ =      1.628 ms
     TestAnnotationNonexistent:   4 threads *   1000000 loops each: tAvg =         313.179 ms (x   1.00), σ =      1.459 ms
     TestAnnotationNonexistent:   8 threads *   1000000 loops each: tAvg =         559.224 ms (x   1.78), σ =      1.818 ms
     TestAnnotationNonexistent:  16 threads *   1000000 loops each: tAvg =       1,067.471 ms (x   3.40), σ =     19.789 ms
     TestAnnotationNonexistent:  32 threads *   1000000 loops each: tAvg =       1,987.963 ms (x   6.33), σ =     67.265 ms


** Original JDK8 code with repeating annotations
** + patched: sun.reflect.annotation.[AnnotationType,AnnotationSupport]

Executing: /home/peter/Apps64/jdk1.8.0-jdk8-tl/bin/java -Xmx4G -cp ../out/production/test -Xbootclasspath/p:../out/production/jdk test.ReflectionTest

measure:

       TestAnnotationRootCache:   1 threads *     10000 loops each: tAvg =       1,849.797 ms (x   1.00), σ =      0.000 ms
       TestAnnotationRootCache:   2 threads *     10000 loops each: tAvg =       1,867.047 ms (x   1.01), σ =      0.957 ms
       TestAnnotationRootCache:   4 threads *     10000 loops each: tAvg =       1,920.399 ms (x   1.04), σ =     10.488 ms
       TestAnnotationRootCache:   8 threads *     10000 loops each: tAvg =       3,313.567 ms (x   1.79), σ =      3.518 ms
       TestAnnotationRootCache:  16 threads *     10000 loops each: tAvg =       6,677.011 ms (x   3.61), σ =     80.192 ms
       TestAnnotationRootCache:  32 threads *     10000 loops each: tAvg =      13,306.217 ms (x   7.19), σ =    263.539 ms

        TestAnnotationExistent:   1 threads *   1000000 loops each: tAvg =       1,656.157 ms (x   1.00), σ =      0.000 ms
        TestAnnotationExistent:   2 threads *   1000000 loops each: tAvg =       1,358.000 ms (x   0.82), σ =      0.140 ms
        TestAnnotationExistent:   4 threads *   1000000 loops each: tAvg =       1,376.794 ms (x   0.83), σ =      0.887 ms
        TestAnnotationExistent:   8 threads *   1000000 loops each: tAvg =       5,597.775 ms (x   3.38), σ =     19.667 ms
        TestAnnotationExistent:  16 threads *   1000000 loops each: tAvg =      16,807.307 ms (x  10.15), σ =    125.833 ms
        TestAnnotationExistent:  32 threads *   1000000 loops each: tAvg =      35,307.760 ms (x  21.32), σ =    298.189 ms

     TestAnnotationNonexistent:   1 threads *   1000000 loops each: tAvg =         279.129 ms (x   1.00), σ =      0.000 ms
     TestAnnotationNonexistent:   2 threads *   1000000 loops each: tAvg =         278.912 ms (x   1.00), σ =      0.086 ms
     TestAnnotationNonexistent:   4 threads *   1000000 loops each: tAvg =         300.253 ms (x   1.08), σ =      0.704 ms
     TestAnnotationNonexistent:   8 threads *   1000000 loops each: tAvg =       1,020.710 ms (x   3.66), σ =     11.049 ms
     TestAnnotationNonexistent:  16 threads *   1000000 loops each: tAvg =       1,590.684 ms (x   5.70), σ =     35.885 ms
     TestAnnotationNonexistent:  32 threads *   1000000 loops each: tAvg =       3,091.061 ms (x  11.07), σ =     62.067 ms


** Original JDK8 code with repeating annotations
** + patched: java.lang.Class, java.lang.reflect.[Field,Method,Constructor,Executable]
** + patched: sun.reflect.annotation.[AnnotationType,AnnotationSupport]

Executing: /home/peter/Apps64/jdk1.8.0-jdk8-tl/bin/java -Xmx4G -cp ../out/production/test -Xbootclasspath/p:../out/production/jdk test.ReflectionTest

measure:

       TestAnnotationRootCache:   1 threads *     10000 loops each: tAvg =          66.431 ms (x   1.00), σ =      0.000 ms
       TestAnnotationRootCache:   2 threads *     10000 loops each: tAvg =          55.649 ms (x   0.84), σ =      0.550 ms
       TestAnnotationRootCache:   4 threads *     10000 loops each: tAvg =          61.874 ms (x   0.93), σ =      4.561 ms
       TestAnnotationRootCache:   8 threads *     10000 loops each: tAvg =          85.971 ms (x   1.29), σ =     10.946 ms
       TestAnnotationRootCache:  16 threads *     10000 loops each: tAvg =          91.199 ms (x   1.37), σ =     11.182 ms
       TestAnnotationRootCache:  32 threads *     10000 loops each: tAvg =          99.674 ms (x   1.50), σ =     30.447 ms

        TestAnnotationExistent:   1 threads *   1000000 loops each: tAvg =         994.312 ms (x   1.00), σ =      0.000 ms
        TestAnnotationExistent:   2 threads *   1000000 loops each: tAvg =         985.304 ms (x   0.99), σ =      1.629 ms
        TestAnnotationExistent:   4 threads *   1000000 loops each: tAvg =         992.780 ms (x   1.00), σ =      1.830 ms
        TestAnnotationExistent:   8 threads *   1000000 loops each: tAvg =       1,753.002 ms (x   1.76), σ =      2.908 ms
        TestAnnotationExistent:  16 threads *   1000000 loops each: tAvg =       3,457.500 ms (x   3.48), σ =     22.736 ms
        TestAnnotationExistent:  32 threads *   1000000 loops each: tAvg =       6,757.454 ms (x   6.80), σ =     63.721 ms

     TestAnnotationNonexistent:   1 threads *   1000000 loops each: tAvg =         159.499 ms (x   1.00), σ =      0.000 ms
     TestAnnotationNonexistent:   2 threads *   1000000 loops each: tAvg =         157.957 ms (x   0.99), σ =      0.121 ms
     TestAnnotationNonexistent:   4 threads *   1000000 loops each: tAvg =         156.581 ms (x   0.98), σ =      0.264 ms
     TestAnnotationNonexistent:   8 threads *   1000000 loops each: tAvg =         293.980 ms (x   1.84), σ =      1.078 ms
     TestAnnotationNonexistent:  16 threads *   1000000 loops each: tAvg =         542.398 ms (x   3.40), σ =     23.541 ms
     TestAnnotationNonexistent:  32 threads *   1000000 loops each: tAvg =         940.446 ms (x   5.90), σ =     61.199 ms
